{
  hostname_prefix = 'unconfigured-node-',
  site_name = 'Freifunk KreisGT (GT City)',
  site_code = 'ffgt',
  site_select = true,
  site_selectcode = 'gut',
  prefix4 = '10.255.0.0/20',
  prefix6 = 'fd42:ffee:ff12:0aff::/64',
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3', -- Europe/Berlin
  ntp_servers = {'ntp.4830.org', 'ntp.services.ffgt.net'},
  regdom = 'DE',

  wifi24 = {
    -- Wireless channel.
    channel = 9,

    -- List of supported wifi rates (optional)
    -- Example removes 802.11b compatibility for better performance
    supported_rates = {6000, 9000, 12000, 18000, 24000, 36000, 48000, 54000},

    -- List of basic wifi rates (optional, required if supported_rates is set)
    -- Example removes 802.11b compatibility for better performance
    basic_rate = {6000, 9000, 18000, 36000, 54000},

    -- ESSID used for client network.
    ap = {
      ssid = 'KreisGT.freifunk.net',
      -- disabled = true, (optional)
    },

    -- mesh = {
    --   id = '00:42:de:ca:fb:ad',
    --   mcast_rate = 12000,
    --   -- disabled = true, (optional)
    -- },

    ibss = {
      ssid = '00:42:de:ca:fb:ad',
      bssid = '00:42:de:ca:fb:ad',
      mcast_rate = 12000,
      -- disabled = true, (optional)
    },
  },

  wifi5 = {
    channel = 44,
    ap = {
      ssid = 'KreisGT.freifunk.net',
    },
    mesh = {
      id = '00:42:de:ca:fb:ad',
      mcast_rate = 12000,
      -- disabled = true, (optional)
    },
  },

  next_node = {
    ip4 = '10.255.0.1',
    ip6 = 'fd42:ffee:ff12:0aff::1',
    mac = 'de:ca:fb:ad:ff:ff',
  },

  -- Options specific to routing protocols (optional)
  -- mesh = {
    -- Options specific to the batman-adv routing protocol (optional)
    -- batman_adv = {
      -- Gateway selection class (optional)
      -- The default class 20 is based on the link quality (TQ) only,
      -- class 1 is calculated from both the TQ and the announced bandwidth
      -- gw_sel_class = 1,
    -- },
  -- },

  fastd_mesh_vpn = {
    methods = {'salsa2012+umac'},
    enabled = true,
    configurable = true,
    -- 1374 should work with anything that can transport 1460 Bytes (DS-Lite MTU) for batman v14 and v15, IPv4 and IPv6.
    -- (Yes, DS-Lite is v4 only, so we could skip the v6 overhead here ...)
    mtu = 1426,
    -- mtu = 1374,
    groups = {
      backbone = {
        -- specifies how many servers are contacted
        -- by a client simultanously
        limit = 1,
        -- list all available vpn servers
        peers = {
          gw01 = {
            key = '2ddba2fe0ed61615016cbbbd71ca1afcc7432dd8eb81c1e18806bcbb766b72b3',
            remotes = {'"gw01-neu.4830.org" port 10000'},
          },
          gw02 = {
            key = 'ee0902a7452d017cd154005e10944dcb278d648776988922d52b960e05d49780',
            remotes = {'"gw02-neu.4830.org" port 10000'},
          },
          gw03 = {
            key = '40343e165e102f65513b5ddb2eb855289fc2e353af672fbe8924627acc2bf8ce',
            remotes = {'"gw03-neu.4830.org" port 10000'},
          },
          gw04 = {
            key = '82532813585cba2538498df56869a57865fe8fa271c4eb61a9e4831310efbdcd',
            remotes = {'"gw04-neu.4830.org" port 10000'},
          },
          gw05 = {
            key = '7f94344fa80d5ec144c14db366712a0cf34f420571cbe4e1025a3f23a88474cb',
            remotes = {'"gw05.4830.org" port 10000'},
          },
          gw06 = {
            key = 'be56eb2cb9493f22b6e0cce4c7f8c838fd44e8c44c6983c58265bbe1c2cf04c0',
            remotes = {'"gw06.4830.org" port 10000'},
          },
        },
      },
      event = {
        limit = 1,
        peers = {
          event01 = {
            key = '21630f3eec4c38808b93947a5ac2f5eae39538b47e9225513bd2b2fa27c4593a',
            remotes = {'"gw-event01.4830.org" port 10000'},
          },
          event02 = {
            key = 'e54a099a3967e2eae0a5e9afc4048adea0f5a7051bfc37616748797c76df77ac',
            remotes = {'"gw-event02.4830.org" port 10000'},
          },
          test01 = {
            key = '3d994652d67cc7a2b4d18cc852d450cd78bfdc50c2c3a8c6ed7df18591c033b3',
            remotes = {'"gw-test01.4830.org" port 10000'},
          },
        },
      },
    },
  },

  tunneldigger_mesh_vpn = {
    mtu = 1400,
    brokers = {
      'gw11.4830.org:10000',
      'gw12.4830.org:10000'
    },
  },

  bandwidth_limit = {
    enabled = false,

    -- Default upload limit (kbit/s).
    egress = 800,

    -- Default download limit (kbit/s).
    ingress = 8000,
  },

  -- configure the autoupdater
  autoupdater = {
    enabled = 1,
    -- default branch for a firmware
    -- In config-mode, the user can select a different branch from below
    branch = 'stable',
    -- available branches for the autoupdater
    branches = {
      stable = {
        -- visible name of this branch (why not use the internal identifier here, too)
        name = 'stable',
        -- where to get the manifest file (without the trailing /manifest)
        -- It's wise to use an internal address here,
        -- but specifying a publicly available update site does not hurt.
        mirrors = {'http://firmware.ipv4.4830.org/stable/sysupgrade', 'http://firmware.ipv6.4830.org/stable/sysupgrade'},
        -- Number of valid manifest signatures necessary to accept the manifest as "good".
        good_signatures = 2,
        -- list of public keys which are considered "good" for manifest signatures
        pubkeys = {
          'fbc997a8fd3b7372b3044cf855c660f70b0f713f8ab1dca4b9a1ae297c8f5588', -- FFGT builder
          'a7ac1e48f4459a995cf6bcd8d3668ca26cf36a1fe5981ddfca93d4c04632deeb', -- wusel
          '3c09bcf54e9c2d244d7888c9d2bdea08b2f2dc249deda23ef8194a114be85390', -- QA1
          'f3a88717ce7ec8250b40191edf088d6f30b9179ad7ec80a8e14abfd270ff8770', -- QA2
        },
      },
      testing = {
        name = 'testing',
        mirrors = {'http://firmware.ipv4.4830.org/testing/sysupgrade', 'http://firmware.ipv6.4830.org/testing/sysupgrade'},
        good_signatures = 1,
        pubkeys = {
         'fbc997a8fd3b7372b3044cf855c660f70b0f713f8ab1dca4b9a1ae297c8f5588', -- FFGT builder
         'a7ac1e48f4459a995cf6bcd8d3668ca26cf36a1fe5981ddfca93d4c04632deeb', -- wusel
         '3c09bcf54e9c2d244d7888c9d2bdea08b2f2dc249deda23ef8194a114be85390', -- QA1
         'f3a88717ce7ec8250b40191edf088d6f30b9179ad7ec80a8e14abfd270ff8770', -- QA2
        },
      },
      experimental = {
        name = 'experimental',
        mirrors = {'http://firmware.ipv4.4830.org/experimental/sysupgrade', 'http://firmware.ipv6.4830.org/experimental/sysupgrade'},
        good_signatures = 1,
        pubkeys = {
          'fbc997a8fd3b7372b3044cf855c660f70b0f713f8ab1dca4b9a1ae297c8f5588', -- FFGT builder
          'a7ac1e48f4459a995cf6bcd8d3668ca26cf36a1fe5981ddfca93d4c04632deeb', -- wusel
          '3c09bcf54e9c2d244d7888c9d2bdea08b2f2dc249deda23ef8194a114be85390', -- QA1
          'f3a88717ce7ec8250b40191edf088d6f30b9179ad7ec80a8e14abfd270ff8770', -- QA2
        },
      },
    },
  },

  -- Node roles
  -- roles = {
  --   default = 'node',
  --   list = {
  --     'node',
  --     'test',
  --     'backbone',
  --     'service',
  --   },
  -- },

  -- Skip setup mode (config mode) on first boot
  -- setup_mode = {
  --  skip = true,
  -- },

  config_mode = {
    -- Show/hide the altitude field
    geo_location = {
      show_altitude = false,
    },
    -- define if the contact field is obligatory (optional)
    owner = {
      obligatory = true
    },
  },
}
