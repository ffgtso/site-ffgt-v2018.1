-- This is a site configuration for Gluon v2018.1
--
{
  domain_names = {
    wrz = 'Müritz-Region'
  },

  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
  hostname_prefix = 'unconfigured-node-',

  -- Name of the community.
  site_name = 'Freifunk Müritz',

  -- Shorthand of the community.
  site_code = 'mueritz',

  -- 32 bytes of random data, encoded in hexadecimal
  -- This data must be unique among all sites and domains!
  -- Can be generated using: echo $(hexdump -v -n 32 -e '1/1 "%02x"' </dev/urandom)
  -- Generated by »echo "Freifunk Müritz" | awk 'BEGIN{for(n=0; n<256; n++) ord[sprintf("%c",n)]=n;} {newstr=""; for(i=1; i<33; i++) {if(i>length($0)) c="\0"; else c=substr($0, i, 1); newstr=sprintf("%s%02x", newstr, ord[c]);} printf("%-64.64s", newstr)}' ; echo«
  domain_seed = '4672656966756e6b204dfc7269747a0000000000000000000000000000000000',

  -- Prefixes used within the mesh.
  -- prefix6 is required, prefix4 can be omitted if next_node.ip4
  -- is not set.
  prefix4 = '10.169.0.0/21',
  prefix6 = 'fd39:e4e3:eee1::/64',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3', -- Europe/Berlin

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {'ntp.4830.org', 'ntp.services.ffgt.net'},

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 5,

    -- List of supported wifi rates (optional)
    -- Example removes 802.11b compatibility for better performance
    supported_rates = {6000, 9000, 12000, 18000, 24000, 36000, 48000, 54000},

    -- List of basic wifi rates (optional, required if supported_rates is set)
    -- Example removes 802.11b compatibility for better performance
    basic_rate = {6000, 9000, 18000, 36000, 54000},

    -- ESSID used for client network.
    ap = {
      ssid = 'mueritz.freifunk.net',
      -- disabled = true, -- (optional)
    },

    -- mesh = {
    --   id = '00:42:de:ca:fb:ad',
    --   mcast_rate = 12000,
    --   -- disabled = true, (optional)
    -- },

    ibss = {
      ssid = '00:23:de:ca:fb:ad',
      bssid = '00:23:de:ca:fb:ad',
      mcast_rate = 12000,
      -- disabled = true, (optional)
    },
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel.
  wifi5 = {
    channel = 44,
    supported_rates = {6000, 9000, 12000, 18000, 24000, 36000, 48000, 54000},
    basic_rate = {6000, 9000, 18000, 36000, 54000},
    ap = {
     ssid = 'mueritz.freifunk.net',
      -- disabled = true, -- (optional)
    },

    -- mesh = {
    --   id = '00:42:de:ca:fb:ad',
    --   mcast_rate = 12000,
    --   -- disabled = true, (optional)
    -- },

    ibss = {
      ssid = '00:23:de:ca:fb:ad',
      bssid = '00:23:de:ca:fb:ad',
      mcast_rate = 12000,
      disabled = true,
    },
  },

  mesh = {
    -- Options specific to the batman-adv routing protocol (optional)
    -- batman_adv = {
      -- Gateway selection class (optional)
      -- The default class 20 is based on the link quality (TQ) only,
      -- class 1 is calculated from both the TQ and the announced bandwidth
      -- gw_sel_class = 1,
    -- },
    vxlan = false,
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    ip4 = '10.169.0.1',
    ip6 = 'fd39:e4e3:eee1::1',
  },

  mesh_vpn = {
    -- the maximum transfer unit
    -- use 1426 for IPv4 gateways
    -- Next release: MTU 1343
    mtu = 1406,

    fastd = {
      -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
      -- what these options do.

      methods = {'salsa2012+umac'},
      configurable = true,
      -- syslog_level = 'warn',

      groups = {
        backbone = {
          -- specifies how many servers are contacted by a client simultanously
          limit = 1,
          -- list all available vpn servers
          peers = {
            gw05 = {
              key = '7f94344fa80d5ec144c14db366712a0cf34f420571cbe4e1025a3f23a88474cb',
              remotes = {'ipv4 "gw05.4830.org" port 10169'},
            },
            gw06 = {
              key = 'be56eb2cb9493f22b6e0cce4c7f8c838fd44e8c44c6983c58265bbe1c2cf04c0',
              remotes = {'ipv4 "gw06.4830.org" port 10169'},
            },
          },
        },
      },
    },
  },
}
