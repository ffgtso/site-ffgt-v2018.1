-- This is a site configuration for Gluon v2018.1
--
{
  domain_names = {
    gut = 'Gütersloh (Stadtgebiet)'
  },

  -- 32 bytes of random data, encoded in hexadecimal
  -- This data must be unique among all sites and domains!
  -- Can be generated using: echo $(hexdump -v -n 32 -e '1/1 "%02x"' </dev/urandom)
  -- Generated by »$ printf %04d%056x%04d 4830 0 0; echo«
  domain_seed = '4830000000000000000000000000000000000000000000000000000000000001',

  -- Prefixes used within the mesh.
  -- prefix6 is required, prefix4 can be omitted if next_node.ip4
  -- is not set.
  prefix4 = '10.255.0.0/20',
  prefix6 = 'fd42:ffee:ff12:0aff::/64',

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {'ntp.4830.org', 'ntp.services.ffgt.net'},

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 9,

    -- List of supported wifi rates (optional)
    -- Example removes 802.11b compatibility for better performance
    supported_rates = {6000, 9000, 12000, 18000, 24000, 36000, 48000, 54000},

    -- List of basic wifi rates (optional, required if supported_rates is set)
    -- Example removes 802.11b compatibility for better performance
    basic_rate = {6000, 9000, 18000, 36000, 54000},

    -- ESSID used for client network.
    ap = {
      ssid = 'KreisGT.freifunk.net',
      -- disabled = true, -- (optional)
    },

    -- mesh = {
    --   id = '00:42:de:ca:fb:ad',
    --   mcast_rate = 12000,
    --   -- disabled = true, (optional)
    -- },

    ibss = {
      ssid = '00:42:de:ca:fb:ad',
      bssid = '00:42:de:ca:fb:ad',
      mcast_rate = 12000,
      -- disabled = true, (optional)
    },
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel.
  wifi5 = {
    channel = 44,
    supported_rates = {6000, 9000, 12000, 18000, 24000, 36000, 48000, 54000},
    basic_rate = {6000, 9000, 18000, 36000, 54000},
    ap = {
      ssid = 'KreisGT.freifunk.net',
      -- disabled = true, -- (optional)
    },

    -- mesh = {
    --   id = '00:42:de:ca:fb:ad',
    --   mcast_rate = 12000,
    --   -- disabled = true, (optional)
    -- },

    ibss = {
      ssid = '00:42:de:ca:fb:ad',
      bssid = '00:42:de:ca:fb:ad',
      mcast_rate = 12000,
      disabled = true,
    },
  },

  mesh = {
    -- Options specific to the batman-adv routing protocol (optional)
    -- batman_adv = {
      -- Gateway selection class (optional)
      -- The default class 20 is based on the link quality (TQ) only,
      -- class 1 is calculated from both the TQ and the announced bandwidth
      -- gw_sel_class = 1,
    -- },
    vxlan = false,
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    ip4 = '10.255.0.1',
    ip6 = 'fd42:ffee:ff12:0aff::1',
  },

  mesh_vpn = {
    -- mtu = 1312,
    -- 1374 should work with anything that can transport 1460 Bytes (DS-Lite MTU) for batman v14 and v15, IPv4 and IPv6.
    mtu = 1426,
    -- mtu = 1374,

    fastd = {
      -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
      -- what these options do.

      methods = {'salsa2012+umac'},
      -- syslog_level = 'warn',

      groups = {
        backbone = {
          -- specifies how many servers are contacted by a client simultanously
          limit = 1,
          -- list all available vpn servers
          peers = {
            gw01 = {
              key = '2ddba2fe0ed61615016cbbbd71ca1afcc7432dd8eb81c1e18806bcbb766b72b3',
              -- This is a list, so you might add multiple entries.
              -- You can also omit the ipv4 to allow both connection via ipv4 and ipv6
              remotes = {'ipv4 "gw01-neu.4830.org" port 10000'},
            },
            gw02 = {
              key = 'ee0902a7452d017cd154005e10944dcb278d648776988922d52b960e05d49780',
              remotes = {'ipv4 "gw02-neu.4830.org" port 10000'},
            },
            gw03 = {
              key = '40343e165e102f65513b5ddb2eb855289fc2e353af672fbe8924627acc2bf8ce',
              remotes = {'ipv4 "gw03-neu.4830.org" port 10000'},
            },
            gw04 = {
              key = '82532813585cba2538498df56869a57865fe8fa271c4eb61a9e4831310efbdcd',
              remotes = {'ipv4 "gw04-neu.4830.org" port 10000'},
            },
          },
        },
      },
    },
  },
}
